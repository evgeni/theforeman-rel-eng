FOREMAN_VERSION="1.23"
KATELLO_VERSION="3.13"
PROJECT="${PROJECT:-foreman}"
if [[ $PROJECT = foreman ]]; then
  VERSION=$FOREMAN_VERSION
elif [[ $PROJECT = katello ]]; then
  VERSION=$KATELLO_VERSION
else
  echo "unsupported project: $PROJECT"
  exit 1
fi
SIGNER="packages@theforeman.org"
OSES="rhel7"
CLIENT_OSES="rhel5 rhel6 rhel7 sles11 sles12 fedora28 fedora29"
RELEASEDIR="releases/$PROJECT/$VERSION"
RPMDIR="$RELEASEDIR/rpms"
KEYDIR="$RELEASEDIR/gnupg"
GNUPGHOME="$KEYDIR"
TARDIR="$RELEASEDIR/tarballs"
EXTRASDIR="$RELEASEDIR/extras"
HOSTS="theforeman.org,"
DOCROOT="/var/www/vhosts/downloads/htdocs"
PASS_NAME_GPG="theforeman/releases/foreman/$FOREMAN_VERSION-gpg"
PASS_NAME_KEY="theforeman/releases/foreman/$FOREMAN_VERSION-key"
XARGS_JOBS="-n 20 -P 4"
GIT_DIR="$HOME/dev"
PACKAGING_DIR="$GIT_DIR/foreman-packaging"
PACKAGING_GIT_REMOTE=origin
TAR_PROJECTS="foreman foreman-proxy foreman-installer foreman-selinux"
RPM_PACKAGES="foreman foreman-installer foreman-proxy foreman-release foreman-selinux"
ROR_BASE_TAG="foreman-rails-$FOREMAN_VERSION"
PACKAGING_PR=true

# Load settings per release
# Expected: GPGKEY FULLGPGKEY FULLVERSION
if [[ ! -d "$RELEASEDIR" ]] ; then
	mkdir -p "$RELEASEDIR"
	echo "FULLVERSION='${VERSION}.0-RC1'" > "$RELEASEDIR/settings"
fi
. "$RELEASEDIR/settings"

copy_gpg_key() {
	gopass show -c "$PASS_NAME_GPG"
}

copy_unix_pass() {
	gopass show -c "theforeman/unix"
}

# vim: ft=sh
